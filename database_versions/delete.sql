DROP TRIGGER IF EXISTS check_question ON public.questions;
DROP TRIGGER IF EXISTS check_answer ON public.answers;
DROP TRIGGER IF EXISTS check_comment ON public.comments;
DROP TRIGGER IF EXISTS questions_tsvector_update_trigger ON public.comments;
DROP TRIGGER IF EXISTS auto_ban_on_warning_limit ON public.warnings;
DROP TRIGGER IF EXISTS answer_update_question_timestamp ON public.publications;

DROP TABLE IF EXISTS warnings CASCADE;
DROP TABLE IF EXISTS badges CASCADE;
DROP TABLE IF EXISTS bans CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS comments CASCADE;
DROP TABLE IF EXISTS questions CASCADE;
DROP TABLE IF EXISTS userbadges CASCADE;
DROP TABLE IF EXISTS locations CASCADE;
DROP TABLE IF EXISTS questions CASCADE;
DROP TABLE IF EXISTS publications CASCADE;
DROP TABLE IF EXISTS modregisters CASCADE;
DROP TABLE IF EXISTS answers CASCADE;
DROP TABLE IF EXISTS "tags" CASCADE;
DROP TABLE IF EXISTS "userroles" CASCADE;
DROP TABLE IF EXISTS "users" CASCADE;
DROP TABLE IF EXISTS "votes" CASCADE;
DROP TABLE IF EXISTS "questiontags" CASCADE;
DROP TABLE IF EXISTS  "answercomments" CASCADE;
DROP TABLE IF EXISTS  "questioncomments" CASCADE;

DROP FUNCTION public.answer_details_from_id(INTEGER);
DROP FUNCTION public.answer_ranking(INTEGER);
DROP FUNCTION public.answer_total_comments(INTEGER);
DROP FUNCTION public.answers_from_questionid(INTEGER);
DROP FUNCTION public.category_questions(INTEGER, INTEGER, INTEGER);
DROP FUNCTION public.count_vote_rating_received_user(INTEGER);
DROP FUNCTION public.delete_question(INTEGER);
DROP FUNCTION public.delete_solved(INTEGER, INTEGER);
DROP FUNCTION public.get_answer_comments(INTEGER);
DROP FUNCTION public.get_publication_rating(INTEGER);
DROP FUNCTION public.get_question_comments(INTEGER);
DROP FUNCTION public.get_questions_by_user_id(INTEGER, INTEGER, INTEGER);
DROP FUNCTION public.get_questions_from_tagid(INTEGER, INTEGER, INTEGER);
DROP FUNCTION public.get_users_pag(INTEGER, INTEGER);
DROP FUNCTION public.getusernamefromquestion(INTEGER);
DROP FUNCTION public.insert_into_answercomments(INTEGER, INTEGER, TEXT);
DROP FUNCTION public.insert_into_answers(INTEGER, INTEGER, TEXT);
DROP FUNCTION public.insert_into_questioncomments(INTEGER, INTEGER, TEXT);
DROP FUNCTION public.insert_into_questions(TEXT, INTEGER, VARCHAR, INTEGER);
DROP FUNCTION public.is_answer_accepted(INTEGER);
DROP FUNCTION public.mark_as_solved(INTEGER, INTEGER);
DROP FUNCTION public.own_content_vote();
DROP FUNCTION public.question_answers(INTEGER);
DROP FUNCTION public.question_details_from_id(INTEGER);
DROP FUNCTION public.question_tags(INTEGER);
DROP FUNCTION public.recent_questions(INTEGER, INTEGER);
DROP FUNCTION public.related_questions(INTEGER, INTEGER);
DROP FUNCTION public.search_answers(TEXT);
DROP FUNCTION public.search_publications(TEXT);
DROP FUNCTION public.search_questions(TEXT);
DROP FUNCTION public.search_tags(TEXT);
DROP FUNCTION public.search_users(TEXT);
DROP FUNCTION public.top_scored_questions(INTEGER, INTEGER);
DROP FUNCTION public.top_scored_users();
DROP FUNCTION public.unanswered_questions(INTEGER, INTEGER);
DROP FUNCTION public.update_question(TEXT, INTEGER, VARCHAR, INTEGER);
DROP FUNCTION public.update_user_profile(INTEGER, VARCHAR, VARCHAR, VARCHAR, TEXT, VARCHAR);
DROP FUNCTION public.user_badges_ranking();
DROP FUNCTION public.user_profile(INTEGER);
DROP FUNCTION public.user_questions(INTEGER);
DROP FUNCTION public.user_total_answers(INTEGER);
DROP FUNCTION public.user_total_comments(INTEGER);
DROP FUNCTION public.user_total_questions(INTEGER);